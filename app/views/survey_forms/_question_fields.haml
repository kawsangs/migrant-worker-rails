%li
  %fieldset.fieldset
    .field-wrapper
      %button.btn.move{type: :button}
        %i.fa.fa-arrows-alt

      .d-flex.flex-1
        .wrapper.d-flex.align-items-center.flex-1
          %button.btn.collapse-trigger{type: :button}
            %i.fas.fa-caret-right

          %abbr.abbr-required{:title => "required", class: ('d-none' if !f.object.required?)} *

          .flex-1
            = f.hidden_field :type, class: 'field-type', 'data-field' => f.object.to_json
            = f.hidden_field :display_order, class: 'display-order'
            = f.text_field :name, placeholder: t('form.name'), class: 'form-control field-name'
            - if error_msg = f.object.errors[:name].presence
              .error-message.text-danger.small= error_msg.join('; ')

            = f.text_field :hint, placeholder: t('form.hint'), class: "form-control field-definition no-style as-hint"

          .w-25.ml-2{style: 'margin-bottom: -16px;'}
            = render "shared/audio", field: :audio, f: f

          %button.btn.btn-outline-primary.btn-add-field{type: 'button'}= t('form.ok')

        .action.d-flex.flex-column
          = f.hidden_field :_destroy
          .btn-setting.pointer.flex-1.d-flex.align-items-center.justify-content-center
            %i.fas.fa-cog.text-secondary
          .remove_fields.pointer.flex-1.d-flex.align-items-center.justify-content-center
            %i.fas.fa-trash-alt.text-danger

    = render 'kinds'

    .collapse-content
      .options-wrapper
        = f.simple_fields_for :options do |builder|
          = render 'option_fields', f: builder
        = link_to_add_fields t('form.add_option'), f, :options

    .setting-wrapper
      = render 'setting', f: f
